<!--
/*===================================================================================
* 
*   Copyright (c) Userware/OpenSilver.net
*      
*   This file is part of the OpenSilver Runtime (https://opensilver.net), which is
*   licensed under the MIT license: https://opensource.org/licenses/MIT
*   
*   As stated in the MIT license, "the above copyright notice and this permission
*   notice shall be included in all copies or substantial portions of the Software."
*  
\*====================================================================================*/
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!--============================================================
  LOCATION OF COMPILER TASKS
  ============================================================-->
  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)..\tools\$(_OpenSilverCompilerAssemblyName).dll" TaskName="OpenSilver.Compiler.ServiceReferenceFixer" />
  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)..\tools\$(_OpenSilverCompilerAssemblyName).dll" TaskName="OpenSilver.Compiler.XamlPreprocessor" />
  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)..\tools\$(_OpenSilverCompilerAssemblyName).dll" TaskName="OpenSilver.Compiler.UpdateIncludesInFSharpProjectFile" />
  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)..\tools\$(_OpenSilverCompilerAssemblyName).dll" TaskName="OpenSilver.Compiler.ResourceClassifier" />
  <UsingTask AssemblyFile="$(MSBuildThisFileDirectory)..\tools\$(_OpenSilverCompilerAssemblyName).dll" TaskName="OpenSilver.Compiler.ResourcesGenerator" />

  <Import Project="$(MSBuildThisFileDirectory)\OpenSilver.GenerateAssemblyInfo.targets" />

  <ItemGroup>
    <AvailableItemName Include="ApplicationDefinition" />
    <AvailableItemName Include="Page" />
    <AvailableItemName Include="Resource" />
  </ItemGroup>

  <!--============================================================
  Configure the Up-To-Date checker to check xaml files - https://github.com/dotnet/project-system/blob/main/docs/up-to-date-check.md
  ============================================================-->
  <ItemGroup>
    <UpToDateCheckInput Include="**\*.xaml"/>
  </ItemGroup>

  <!--============================================================
  Add the tasks "CSharpXamlForHtml5BeforeCompile" and "CSharpXamlForHtml5BeforeBuild" to the build process:
  ============================================================-->
  <PropertyGroup>
    <CompileDependsOn>
      CSharpXamlForHtml5BeforeCompile;
      $(CompileDependsOn);
    </CompileDependsOn>
  </PropertyGroup>

  <PropertyGroup>
    <BuildDependsOn>
      CSharpXamlForHtml5BeforeBuild;
      $(BuildDependsOn);
    </BuildDependsOn>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IsSecondPass)' == 'True'">
    <PrepareResourcesDependsOn>
      FileClassification;
      MainResourcesGeneration;
      $(PrepareResourcesDependsOn)
    </PrepareResourcesDependsOn>
  </PropertyGroup>

  <!--============================================================
  Set the default values for some properties (for example, if the output paths have not been specified, we set the default ones):
  ============================================================-->
  <PropertyGroup>
    <DefineConstants>$(DefineConstants);OPENSILVER</DefineConstants>
    <DefaultXamlRuntime>Wpf</DefaultXamlRuntime>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <IsOpenSilver>true</IsOpenSilver>
    <IsSecondPass Condition="'$(IsSecondPass)'==''">False</IsSecondPass>
    <OutputExtension Condition="'$(Language)' == 'C#'">cs</OutputExtension>
    <OutputExtension Condition="'$(Language)' == 'VB'">vb</OutputExtension>
    <OutputExtension Condition="'$(Language)' == 'F#'">fs</OutputExtension>
    <EnableServiceReferenceFixer Condition="'$(EnableServiceReferenceFixer)' == ''">true</EnableServiceReferenceFixer>
    <EnableServiceReferenceFixer Condition="'$(Language)' == 'F#'">false</EnableServiceReferenceFixer>
    <OpenSilverXamlPreprocessorOptions Condition=" '$(OpenSilverXamlPreprocessorOptions)' == '' ">Auto</OpenSilverXamlPreprocessorOptions>
  </PropertyGroup>

  <!--============================================================
  Get a consistent way to access the output directory, independent on whether OutputPath is Relative or Absolute:
  ============================================================-->
  <PropertyGroup>
    <OutputAssemblyDirectory Condition="!$([System.IO.Path]::IsPathRooted('$(OutputPath)'))">$([System.IO.Path]::Combine('$(MSBuildProjectDirectory)', '$(OutputPath)'))</OutputAssemblyDirectory>
    <OutputAssemblyDirectory Condition="$([System.IO.Path]::IsPathRooted('$(OutputPath)'))">$(OutputPath)</OutputAssemblyDirectory>
  </PropertyGroup>

  <!--
  ================================================================
  FileClassification
  ================================================================
  -->
  <Target Name="FileClassification">

    <ResourceClassifier Condition="'@(Resource)' != '' or '@(Content)' != ''"
                        ResourceFiles="@(Resource)"
                        ContentFiles="@(Content)">
      <Output ItemName="MainEmbeddedFiles" TaskParameter="MainEmbeddedFiles" />
      <Output ItemName="_ResourceClassifierRemovedContentFiles" TaskParameter="RemovedContentFiles" />
    </ResourceClassifier>

    <ItemGroup>
      <Content Remove="@(_ResourceClassifierRemovedContentFiles)" />
    </ItemGroup>

  </Target>

  <!--
  ============================================================
  MainResourcesGeneration
  ============================================================
  -->
  <Target Name="MainResourcesGeneration">

    <PropertyGroup>
      <_ResourceNameInMainAssembly>$(AssemblyName).g.resources</_ResourceNameInMainAssembly>
    </PropertyGroup>

    <ResourcesGenerator ResourceFiles="@(MainEmbeddedFiles)"
                        OutputPath="$(IntermediateOutputPath)"
                        OutputResourcesFile="$(IntermediateOutputPath)$(_ResourceNameInMainAssembly)"
                        Condition="'@(MainEmbeddedFiles)' != ''">

      <!-- Put the generated files in item FileWrites so that they can be cleaned up appropriately in a next Rebuild -->
      <Output ItemName="FileWrites" TaskParameter="OutputResourcesFile" />
    </ResourcesGenerator>

    <ItemGroup Condition="'@(MainEmbeddedFiles)' != ''">
      <EmbeddedResource Include="$(IntermediateOutputPath)$(_ResourceNameInMainAssembly)">
        <GenerateResource>false</GenerateResource>
        <Type>Resx</Type>
        <WithCulture>false</WithCulture>
        <OutputResource>$(IntermediateOutputPath)$(_ResourceNameInMainAssembly)</OutputResource>
      </EmbeddedResource>
    </ItemGroup>
    
  </Target>

  <Target Name="CSharpXamlForHtml5BeforeCompile">
    <CallTarget Condition="'$(IsNotDesignTimeCompilation)' == 'true'"
                Targets="CSharpXamlForHtml5BeforeCompile_NotDesignTime" />
  </Target>

  <!--============================================================
  BEFORE BUILD
  ============================================================-->
  <Target Name="CSharpXamlForHtml5BeforeBuild">

    <PropertyGroup>
      <IsNotDesignTimeCompilation>true</IsNotDesignTimeCompilation>
    </PropertyGroup>

    <!--============================================================
    Display an error if this version has breaking changes that require manual update of the project files:
    ============================================================-->
    <Exec Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;2"
          Command="explorer.exe https://opensilver.net/how-to-migrate-to-1-0-0-alpha-007-or-newer/" Timeout="2000" ContinueOnError="True"></Exec>
    <Error Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;2"
           Text="The version of OpenSilver that you are referencing - which is newer and contains many improvements - requires migration of your project. To fix this issue, please follow the steps described at: https://opensilver.net/how-to-migrate-to-1-0-0-alpha-007-or-newer/"/>
    <Exec Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;3"
          Command="explorer.exe https://opensilver.net/alpha19-2/" Timeout="2000" ContinueOnError="True"></Exec>
    <Error Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;3"
           Text="The version of OpenSilver that you are referencing - which is newer and contains many improvements - requires migration of your project. To fix this issue, please follow the steps described at: https://opensilver.net/alpha19-2/"/>
    <Exec Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;4"
          Command="explorer.exe https://opensilver.net/permalinks/update/alpha20.aspx" Timeout="2000" ContinueOnError="True"></Exec>
    <Error Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;4"
           Text="The version of OpenSilver that you are referencing - which is newer and contains many improvements - requires migration of your project. To fix this issue, please follow the steps described at: https://opensilver.net/permalinks/update/alpha20.aspx"/>
    <Exec Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;5"
          Command="explorer.exe https://opensilver.net/2-0/" Timeout="2000" ContinueOnError="True"></Exec>
    <Error Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;5"
           Text="The version of OpenSilver that you are referencing - which is newer and contains many improvements - requires migration of your project. To fix this issue, please follow the steps described at: https://opensilver.net/2-0/"/>
    <Exec Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;6"
          Command="explorer.exe https://opensilver.net/upgrade-to-2.2/" Timeout="2000" ContinueOnError="True"></Exec>
    <Error Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;6"
           Text="The version of OpenSilver that you are referencing - which is newer and contains many improvements - requires migration of your project. To fix this issue, please follow the steps described at: https://opensilver.net/upgrade-to-2.2/"/>
    <Exec Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;7"
          Command="explorer.exe https://opensilver.net/upgrade-to-3.1/" Timeout="2000" ContinueOnError="True" />
    <Error Condition="'$(OpenSilverType)' != '' And $(OpenSilverType)&lt;7"
           Text="The version of OpenSilver that you are referencing - which is newer and contains many improvements - requires migration of your project. To fix this issue, please follow the steps described at: https://opensilver.net/upgrade-to-3.1/" />

    <!--============================================================
      ServiceReferenceFixer (case insensitive) (only during Pass 2)
      ============================================================-->
    <ItemGroup Condition="'$(EnableServiceReferenceFixer)' == 'true'">
      <ServiceReferenceFile Include="%(Compile.RelativeDir)%(Compile.Filename).$(OutputExtension)"
                            Condition="'%(Compile.Filename)%(Compile.Extension)'=='reference.$(OutputExtension)'" />
      <!-- Note: users can specify additional files by adding ServiceReferenceFile tags to the .CSPROJ
      Possible optional attributes are:
      - ClientBaseToken to enforce a specific token representing the ClientBase object, if different from "base.Channel"
      - ClientBaseInterfaceName to enforce a specific interface for the Service Contract
      - EndpointCode to enforce a specific token to retrieve the endpoint address, if diffferent from "this.INTERNAL_RemoteAddressAsString"
      - SoapVersion to set the SOAP version (default: 1.1) -->
    </ItemGroup>

    <ServiceReferenceFixer
      Condition="'$(EnableServiceReferenceFixer)' == 'true'"
      SourceFile="@(ServiceReferenceFile)"
      OutputFile="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)%(ServiceReferenceFile.RelativeDir)%(ServiceReferenceFile.Filename).g.$(OutputExtension)"
      />
    <ItemGroup Condition="'$(EnableServiceReferenceFixer)' == 'true'">
      <ServiceReferenceFixerProcessedFiles Include="@(ServiceReferenceFile->'$(IntermediateOutputPath)%(RelativeDir)%(Filename).g.$(OutputExtension)')" />
      <Compile Remove="@(ServiceReferenceFile)" />
      <Compile Include="@(ServiceReferenceFixerProcessedFiles)" />
      <FileWrites Include="@(ServiceReferenceFixerProcessedFiles)" />
    </ItemGroup>

  </Target>

  <!--============================================================
  BEFORE COMPILE
  ============================================================-->
  <Target Name="CSharpXamlForHtml5BeforeCompile_NotDesignTime">
    
    <!--============================================================
      XamlPreprocessor (during Pass 1 and Pass 2)
      ============================================================-->
    <XamlPreprocessor
      Condition="'$(SkipXamlPreprocessor)'!='true' And '$(NoXamlPreprocessor)'!='True'"
      PageFiles="@(Page)"
      ApplicationDefinitionFiles="@(ApplicationDefinition)"
      ContentFiles="@(Content->WithMetadataValue('Extension', '.xaml'))"
      ResolvedReferences="@(ReferencePath)"
      IntermediateOutputPath="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)"
      OutputPath="$(OutputAssemblyDirectory)"
      AssemblyName="$(AssemblyName)"
      IsSecondPass="$(IsSecondPass)"
      VerifyHash="false"
      RootNamespace="$(RootNamespace)"
      Options="$(OpenSilverXamlPreprocessorOptions)"
      Language="$(Language)">
      <Output ItemName="_XamlPreprocessorGeneratedFiles" TaskParameter="GeneratedFiles" />
      <Output ItemName="_XamlPreprocessorProcessedPageFiles" TaskParameter="ProcessedPageFiles" />
      <Output ItemName="_XamlPreprocessorProcessedApplicationDefinitionFiles" TaskParameter="ProcessedApplicationDefinitionFiles" />
      <Output ItemName="_XamlPreprocessorProcessedContentFiles" TaskParameter="ProcessedContentFiles" />
    </XamlPreprocessor>

    <ItemGroup Condition="'$(Language)' == 'C#' Or '$(Language)' == 'VB'">
      <Page Remove="@(_XamlPreprocessorProcessedPageFiles)" />
      <ApplicationDefinition Remove="@(_XamlPreprocessorProcessedApplicationDefinitionFiles)" />
      <Content Remove="@(_XamlPreprocessorProcessedContentFiles)" />
      <Compile Include="@(_XamlPreprocessorGeneratedFiles)" />
    </ItemGroup>

    <!--============================================================
      F# Support : Read xaml files from the project file and change 
      it to generated fs file names. Changed file names will be added 
      as Include itemgroup later.
      ============================================================-->
    <UpdateIncludesInFSharpProjectFile ProjectPath="$(MSBuildProjectFullPath)"
                                       AllItems="@(Compile);@(_XamlPreprocessorProcessedPageFiles);@(_XamlPreprocessorProcessedApplicationDefinitionFiles);@(_XamlPreprocessorProcessedContentFiles)"
                                       Condition="'$(Language)' == 'F#'">
      <Output ItemName="_UpdateIncludesInFSharpProjectFileUpdatedItems" TaskParameter="UpdatedItems" />
    </UpdateIncludesInFSharpProjectFile>

    <ItemGroup Condition="'$(Language)' == 'F#'">
      <Compile Remove="@(Compile)" />
      <Page Remove="@(_XamlPreprocessorProcessedPageFiles)" />
      <ApplicationDefinition Remove="@(_XamlPreprocessorProcessedApplicationDefinitionFiles)" />
      <Content Remove="@(_XamlPreprocessorProcessedContentFiles)" />
      <Compile Include="@(_UpdateIncludesInFSharpProjectFileUpdatedItems)" />
    </ItemGroup>

  </Target>

  <!--============================================================
  BEFORE POST BUILD
  ============================================================-->
  <Target Name="CSharpXamlForHtml5BeforePostBuild" BeforeTargets="PostBuildEvent">

    <Message Text="OpenSilver Before post build. IsSecondPass=$(IsSecondPass)" Importance="normal"/>

    <!--============================================================
      Launch the second pass (only during Pass 1)
      ============================================================-->
    <MSBuild Condition="'$(IsSecondPass)'!='True'" Projects="$(MSBuildProjectFile)" Properties="IsSecondPass=True" />

    <!--============================================================
      Enable the Post Build event only during Pass 2 (to avoid calling the Post Build event twice)
      ============================================================-->
    <PropertyGroup Condition="'$(IsSecondPass)'!='True'">
      <!-- This will override the the PostBuild event during Pass 1 with a useless command ("echo") -->
      <PostBuildEvent>echo </PostBuildEvent>
    </PropertyGroup>

  </Target>

  <!--============================================================
  DESIGN-TIME COMPILATION
  ============================================================-->

  <PropertyGroup>
    <CoreCompileDependsOn>
      BeforeCoreCompile;
      $(CoreCompileDependsOn);
    </CoreCompileDependsOn>
  </PropertyGroup>

  <Target Name="BeforeCoreCompile">
    <CallTarget Condition="'$(IsNotDesignTimeCompilation)' != 'true'" Targets="DesignTimeCompilation" />
  </Target>

  <Target Name="DesignTimeCompilation">

    <!--============================================================
      XamlPreprocessor
      ============================================================-->
    <XamlPreprocessor
      Condition="'$(SkipXamlPreprocessor)'!='true' And '$(IsSecondPass)'!='True' And '$(NoXamlPreprocessor)'!='True'"
      PageFiles="@(Page)"
      ApplicationDefinitionFiles="@(ApplicationDefinition)"
      ContentFiles="@(Content->WithMetadataValue('Extension', '.xaml'))"
      ResolvedReferences="@(ReferencePath)"
      IntermediateOutputPath="$(MSBuildProjectDirectory)\$(IntermediateOutputPath)"
      OutputPath="$(OutputAssemblyDirectory)"
      AssemblyName="$(AssemblyName)"
      IsSecondPass="false"
      VerifyHash="false"
      RootNamespace="$(RootNamespace)"
      Options="$(OpenSilverXamlPreprocessorOptions)"
      Language="$(Language)">
      <Output ItemName="_XamlPreprocessorGeneratedFiles" TaskParameter="GeneratedFiles" />
      <Output ItemName="_XamlPreprocessorProcessedPageFiles" TaskParameter="ProcessedPageFiles" />
      <Output ItemName="_XamlPreprocessorProcessedApplicationDefinitionFiles" TaskParameter="ProcessedApplicationDefinitionFiles" />
      <Output ItemName="_XamlPreprocessorProcessedContentFiles" TaskParameter="ProcessedContentFiles" />
    </XamlPreprocessor>

    <ItemGroup Condition="'$(Language)' == 'C#' Or '$(Language)' == 'VB'">
      <Page Remove="@(_XamlPreprocessorProcessedPageFiles)" />
      <ApplicationDefinition Remove="@(_XamlPreprocessorProcessedApplicationDefinitionFiles)" />
      <Content Remove="@(_XamlPreprocessorProcessedContentFiles)" />
      <Compile Include="@(_XamlPreprocessorGeneratedFiles)" />
    </ItemGroup>

    <!--============================================================
      F# Support : Read xaml files from the project file and change 
      it to generated fs file names. Changed file names will be added 
      as Include itemgroup later.
      ============================================================-->
    <UpdateIncludesInFSharpProjectFile ProjectPath="$(MSBuildProjectFullPath)"
                                       AllItems="@(Compile);@(_XamlPreprocessorProcessedPageFiles);@(_XamlPreprocessorProcessedApplicationDefinitionFiles);@(_XamlPreprocessorProcessedContentFiles)"
                                       Condition="'$(Language)' == 'F#'">
      <Output ItemName="_UpdateIncludesInFSharpProjectFileUpdatedItems" TaskParameter="UpdatedItems" />
    </UpdateIncludesInFSharpProjectFile>

    <ItemGroup Condition="'$(Language)' == 'F#'">
      <Compile Remove="@(Compile)" />
      <Page Remove="@(_XamlPreprocessorProcessedPageFiles)" />
      <ApplicationDefinition Remove="@(_XamlPreprocessorProcessedApplicationDefinitionFiles)" />
      <Content Remove="@(_XamlPreprocessorProcessedContentFiles)" />
      <Compile Include="@(_UpdateIncludesInFSharpProjectFileUpdatedItems)" />
    </ItemGroup>

  </Target>

</Project>
